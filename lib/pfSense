#!/bin/bash
# command library for pfsense, do not use outside of wazuh_netmgr

lib_execute_command(){
	[ $VERBOSE -eq 1 ] && echo "Executing command on ssh..."
	local method=$1
	local ip=$2
	local username=$3
	local password=$4
	local commands=$5
	local retcode=0
	
	case "$method" in
		password)
			if [ $VERBOSE -eq 1 ]; then
				sshpass -p "$password" ssh -o StrictHostKeyChecking=no $username@$ip <<EOF
$commands
EOF
			else
				sshpass -p "$password" ssh -o StrictHostKeyChecking=no $username@$ip <<EOF > /dev/null 2>&1
$commands
EOF
			fi
			retcode=$?
			;;
		*)
			echo "Error: Method $method is invalid or not available."
			return 1
			;;
	esac
    
	[ $VERBOSE -eq 1 ] && [ $retcode -eq 0 ] && echo "Command execution success" || echo "Command execution failed"
	return $retcode
}

lib_register_password(){
	local ip=$1
	local username=$2
	local password=$3	
	local retcode=0
    local commands=""

    echo "Registering pfSense with ip: $ip..."
    [ $VERBOSE -eq 1 ] && echo "Wazuh ip addr is $WAZUH_SERVER_IP"

	lib_execute_command "password" "$ip" "$username" "$password" "$commands"

	retcode=$?
    [ $retcode -eq 0 ] && echo "pfSense registration success" || echo "pfSense registration failed"
	return $retcode
}

lib_unregister_password(){
	local ip=$1
	local username=$2
	local password=$3
	local retcode=0
    local commands=""

    echo "Unregistering pfSense with ip: $ip..."
    [ $VERBOSE -eq 1 ] && echo "Wazuh ip addr is $WAZUH_SERVER_IP"

	lib_execute_command "password" "$ip" "$username" "$password" "$commands"

	retcode=$?
    [ $retcode -eq 0 ] && echo "pfSense unregistration success" || echo "pfSense unregistration failed"
	return $retcode
}

